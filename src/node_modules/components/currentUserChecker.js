import { useContext, useEffect } from 'react';
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

//отвечает за фетч и сохранение текущего юзера

const CurrentUserChecker = ({children}) => {
  const [{response}, doFetch] = useFetch('/user');
  const [, dispatch] = useContext(CurrentUserContext)
  const [token] = useLocalStorage('token')


useEffect(() => {
  //если токена нет, ничего не фетчим
  if (!token) {
    dispatch({type: 'SET_UNAUTHORIZED'})
    return
  }
  // console.log('init')

  doFetch()
  dispatch({type: 'LOADING'})
}, [dispatch, token, doFetch])

//следит за ответом от сервера(когда придет response)
useEffect(() => {
  if (!response) {
    return
  }
  dispatch({type: 'SET_AUTHORIZED', payload: response.user})

}, [response, dispatch])


return children
};

export default CurrentUserChecker;
