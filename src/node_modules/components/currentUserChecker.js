import { useContext, useEffect } from 'react';
import useFetch from 'hooks/useFetch'
import {CurrentUserContext} from 'contexts/currentUser'
import useLocalStorage from 'hooks/useLocalStorage'

//отвечает за фетч и сохранение текущего юзера

const CurrentUserChecker = ({children}) => {
  const [{response}, doFetch] = useFetch('/user');
  const [, setCurrentUserState] = useContext(CurrentUserContext)
  const [token] = useLocalStorage('token')


useEffect(() => {
  //если тока нет, ничего не фетчим
  if (!token) {
    setCurrentUserState(state => ({
      ...state,
      isLoggedIn: false
    }))
    return
  }
  console.log('init')

  doFetch()
  setCurrentUserState(state => ({
    ...state,
    isLoading: true
  }))
}, [setCurrentUserState, token, doFetch])

//следит за ответом от сервера(когда придет response)
useEffect(() => {
  if (!response) {
    return
  }
  setCurrentUserState(state => ({
    ...state,
    isLoggedIn: true,
    isLoading: false,
    currentUser: response.user
  }))
}, [response, setCurrentUserState])


return children
};

export default CurrentUserChecker;
