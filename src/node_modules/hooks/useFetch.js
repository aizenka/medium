import { useState, useEffect, useCallback } from "react"
import axios from 'axios'
import useLocalStorage from 'hooks/useLocalStorage'
//отвечает за post в api


export default url => {
  const _baseUrl = 'https://conduit.productionready.io/api',
        [isLoading, setIsLoading] = useState(false),
        [error, setError] = useState(null),
        [response, setResponse] = useState(null),
        [options, setOptions] = useState({}),
        [token] = useLocalStorage('token');

  // console.log('token', token)

  const doFetch = useCallback((options = {}) => {
    setOptions(options)
    setIsLoading(true)
  }, [])

  useEffect( () => {
    /*
      добавляем наш токен после сета options(headers), но перед их отправкой
      мерджим старые опции с новыми, внутри которых передаем токен или пустую строку в том случае
      если пользователь не залогинен
    */
    const requestOptions = {
      ...options,
      ...{
        headers: {
          authorization: token ? `Token ${token}` : ''
        }
      }
    }
    if (!isLoading) {
      return
    }

     axios(_baseUrl + url, requestOptions)
      .then(res => {
        // console.log('success', res)
        setIsLoading(false)
        setResponse(res.data)
      })
      .catch(error => {
        console.log(setError)
        setIsLoading(false)
        setError(error.response.data)
      })
  }, [isLoading, options, url, error, token])

  return[{isLoading, response, error}, doFetch]
}
